{"version":3,"sources":["../src/datasource.js"],"names":["moment","require","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","headers","Authorization","getAuthorization","jsonData","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","options","targets","filter","target","queryType","sql","hide","length","when","data","Promise","all","map","request","generateSql","then","postQuery","res","result","arithmeticQueries","flat","err","console","log","desc","Error","response","status","message","title","params","resolve","reject","datasourceRequest","method","alias","aliasRow","regex","replace","match","g1","g2","group","queryStart","queryEnd","intervalMs","range","from","toISOString","to","toString","scopedVars","allVaribles","getVariables","variables","i","current","value","query","column_meta","rows","cols","aliasList","split","timeSeriesIndex","findIndex","item","formatType","push","columns","text","refId","getRowAlias","resultItem","datapoints","k","timeShiftDuration","duration","timeshift","period","unit","utc","tz","add","valueOf","expression","targetRefIds","flatMap","field","index","targetResults","forEach","datapoint","dataArithmetic","functionArgs","join","functionBody","expressionFunction","Function","aliasListResult","Object","entries","args","apply","error","Array","isArray","parseInt","concat","input","_keyStr","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","charCodeAt","isNaN","charAt","defaultUser","user","defaultPassword","password","encode","values"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\r\nvar moment = require('./js/moment-timezone-with-data');\r\nexport class GenericDatasource {\r\n\r\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\r\n    // console.log(\"instanceSettings\",instanceSettings);\r\n    this.type = instanceSettings.type;\r\n    this.url = instanceSettings.url;\r\n    this.name = instanceSettings.name;\r\n    this.q = $q;\r\n    this.backendSrv = backendSrv;\r\n    this.templateSrv = templateSrv;\r\n    this.headers = { 'Content-Type': 'application/json' };\r\n    this.headers.Authorization = this.getAuthorization(instanceSettings.jsonData);\r\n    this.timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n  }\r\n\r\n  query(options) {\r\n    // console.log('options',options);\r\n    if (options.timezone) {\r\n      this.timezone = options.timezone == \"browser\"?Intl.DateTimeFormat().resolvedOptions().timeZone:options.timezone;\r\n    }\r\n    const targets = options.targets.filter((target) => (!target.queryType||target.queryType === \"SQL\")&&target.sql&&!(target.hide === true));\r\n    if (targets.length <= 0) {\r\n      return this.q.when({ data: [] });\r\n    }\r\n\r\n    return Promise.all(targets.map(target => this.request('/rest/sqlutc',this.generateSql(target.sql,options)).then(res => this.postQuery(target,res,options))))\r\n      .then(data => {\r\n        let result = this.arithmeticQueries(data,options).flat();\r\n        // console.log('result',result);\r\n        return {data:result};\r\n      },(err)=>{\r\n        console.log(err);\r\n        if (err.data&&err.data.desc) {\r\n          throw new Error(err.data.desc);\r\n        }else{\r\n          throw new Error(err);\r\n        }\r\n      });\r\n  }\r\n\r\n  testDatasource() {\r\n    return this.request('/rest/sqlutc','show databases').then(response => {\r\n        if (!!response && response.status === 200) {\r\n          return { status: \"success\", message: \"TDengine Data source is working\", title: \"Success\" };\r\n        }\r\n        return { status: \"error\", message: \"TDengine Data source is not working\", title: \"Failed\" };\r\n      });\r\n  }\r\n\r\n  request(url , params) {\r\n    if (!params) {\r\n      return new Promise((resolve, reject)=>{\r\n        resolve();\r\n      });\r\n    }\r\n    return this.backendSrv.datasourceRequest({\r\n      url: `${this.url}${url}`,\r\n      data: params,\r\n      method: 'POST',\r\n      headers: this.headers,\r\n    });\r\n  }\r\n\r\n  getRowAlias(alias, aliasRow,options) {\r\n    if (!alias) {\r\n      return aliasRow;\r\n    }\r\n    alias = this.generateSql(alias,options);\r\n    const regex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)\\]\\]/g;\r\n    return alias.replace(regex,(match, g1, g2) => {\r\n      const group = g1 || g2;\r\n\r\n      if (group === 'col') {\r\n        return aliasRow;\r\n      }\r\n      return match;\r\n    });\r\n  }\r\n  generateSql(sql,options) {\r\n    // console.log('sql',sql);\r\n    if (!sql||sql.length == 0) {\r\n      return sql;\r\n    }\r\n\r\n    var queryStart = \"now-1h\";\r\n    var queryEnd = \"now\";\r\n    var intervalMs = \"20000\";\r\n    if (!!options) {\r\n      if (!!options.range && !!options.range.from ) {\r\n        queryStart = options.range.from.toISOString();\r\n      }\r\n  \r\n      if (!!options.range && !!options.range.to ) {\r\n        queryEnd = options.range.to.toISOString();\r\n      }\r\n      \r\n      if (!!options.intervalMs ) {\r\n        intervalMs = options.intervalMs.toString();\r\n      }\r\n  \r\n      sql = this.templateSrv.replace(sql, options.scopedVars, 'csv');\r\n    }\r\n    \r\n    intervalMs += \"a\";\r\n    sql = sql.replace(/^\\s+|\\s+$/gm, '');\r\n    sql = sql.replace(\"$from\", \"'\" + queryStart + \"'\");\r\n    sql = sql.replace(\"$begin\", \"'\" + queryStart + \"'\");\r\n    sql = sql.replace(\"$to\", \"'\" + queryEnd + \"'\");\r\n    sql = sql.replace(\"$end\", \"'\" + queryEnd + \"'\");\r\n    sql = sql.replace(\"$interval\", intervalMs);\r\n    \r\n    const allVaribles = this.templateSrv.getVariables ? this.templateSrv.getVariables() : this.templateSrv.variables||[];\r\n    for (let i = 0; i < allVaribles.length; i++) {\r\n      if (allVaribles[i].current&&allVaribles[i].current.value) {\r\n        sql = sql.replace(\"$\"+allVaribles[i].name, allVaribles[i].current.value);\r\n      }\r\n    }\r\n\r\n    return sql;\r\n  }\r\n\r\n  postQuery(query, response,options) {\r\n    // console.log('query',query);\r\n    // console.log('response',response);\r\n    if (!response||!response.data||!response.data.data) {\r\n      return [];\r\n    }\r\n    const headers = response.data.column_meta;\r\n    const data = response.data.data;\r\n    const rows = response.data.rows;\r\n    const cols = headers.length;\r\n    const result = [];\r\n    const aliasList = (query.alias||'').split(',')||[];\r\n    if (!!headers&&!!headers[0]&&!!headers[0][1]) {\r\n      const timeSeriesIndex = headers.findIndex(item => item[1] === 9);\r\n      if (timeSeriesIndex == -1||query.formatType == 'Table') {\r\n        result.push({columns:headers.map(item => ({text:item[0]})),rows:data,type:'table',refId:query.refId,target:this.getRowAlias(aliasList[0],headers[0][0],options),hide:!!query.hide});\r\n      }else{\r\n        for (let i = 0; i < cols; i++) {\r\n          if (i == timeSeriesIndex) {\r\n            continue;\r\n          }\r\n          let aliasRow = headers[i][0];\r\n          if (i<=aliasList.length) {\r\n            aliasRow = this.getRowAlias(aliasList[i-1],aliasRow,options);\r\n          }\r\n          let resultItem = {datapoints:[],refId:query.refId,target:aliasRow,hide:!!query.hide};\r\n          for (let k = 0; k < rows; k++) {\r\n            let timeShiftDuration = moment.duration();\r\n            if (query.timeshift&&query.timeshift.period&&query.timeshift.unit) {\r\n              timeShiftDuration = moment.duration(query.timeshift.period,query.timeshift.unit);\r\n            }\r\n            resultItem.datapoints.push([data[k][i],moment.utc(data[k][timeSeriesIndex]).tz(this.timezone).add(timeShiftDuration).valueOf()]);\r\n          }\r\n          result.push(resultItem);\r\n        }\r\n      }\r\n    }\r\n    // console.log('result',result);\r\n    return result;\r\n  }\r\n  arithmeticQueries(data,options) {\r\n    const arithmeticQueries = options.targets.filter((target) => target.queryType === \"Arithmetic\"&&target.expression&&!(target.hide === true));\r\n    if (arithmeticQueries.length == 0) return data;\r\n    let targetRefIds = data.flatMap((item)=>item.flatMap((field,index)=>(index == 0?[field.refId,field.refId+'__'+index]:[field.refId+'__'+index])));\r\n    // console.log('targetRefIds',targetRefIds);\r\n    let targetResults = {};\r\n    data.forEach((item)=>{\r\n      item.forEach((field,index)=>{\r\n        field.datapoints.forEach(datapoint => {\r\n          targetResults[datapoint[1]] = targetResults[datapoint[1]]||[];\r\n          if (index == 0) {\r\n            targetResults[datapoint[1]].push(datapoint[0]);\r\n          }\r\n          targetResults[datapoint[1]].push(datapoint[0]);\r\n        })\r\n      })\r\n    });\r\n    \r\n    try {\r\n      let dataArithmetic = arithmeticQueries.map(target => {\r\n        let functionArgs = targetRefIds.join(', ');\r\n        let functionBody = \"return (\" + target.expression + \");\";\r\n        let expressionFunction = new Function(functionArgs, functionBody);\r\n        let result = null;\r\n        const aliasList = (target.alias||'').split(',').map(alias => this.getRowAlias(alias,target.refId,options));\r\n\r\n        const aliasListResult = [];\r\n        Object.entries(targetResults).forEach(args => {\r\n          if (args[1].length === targetRefIds.length) {\r\n            try {\r\n              result = expressionFunction.apply(this, args[1]);\r\n            } catch (error) {\r\n              throw error\r\n            }\r\n          }\r\n          // else{\r\n          //   console.log('args not full',targetRefIds,args);\r\n          // }\r\n          if (!Array.isArray(result)) {\r\n            result = [result];\r\n          }\r\n          result.forEach((item,index)=>{\r\n            aliasListResult[index] = aliasListResult[index]||{datapoints:[],refId:target.refId,target:aliasList[index]||(target.refId+'__'+index),hide:!!target.hide};\r\n            aliasListResult[index].datapoints.push([item,parseInt(args[0])]);\r\n          })\r\n        });\r\n        return aliasListResult;\r\n      });\r\n      return data.concat(dataArithmetic);\r\n    }catch (err) {\r\n      // console.log(err);\r\n      throw new Error(err);\r\n    }\r\n  }\r\n\r\n  encode(input) {\r\n    var _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n    var output = \"\";\r\n    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n    var i = 0;\r\n    while (i < input.length) {\r\n      chr1 = input.charCodeAt(i++);\r\n      chr2 = input.charCodeAt(i++);\r\n      chr3 = input.charCodeAt(i++);\r\n      enc1 = chr1 >> 2;\r\n      enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n      enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n      enc4 = chr3 & 63;\r\n      if (isNaN(chr2)) {\r\n        enc3 = enc4 = 64;\r\n      } else if (isNaN(chr3)) {\r\n        enc4 = 64;\r\n      }\r\n      output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  getAuthorization(jsonData) {\r\n    jsonData = jsonData || {};\r\n    var defaultUser = jsonData.user || \"root\";\r\n    var defaultPassword = jsonData.password || \"taosdata\";\r\n\r\n    return \"Basic \" + this.encode(defaultUser + \":\" + defaultPassword);\r\n  }\r\n\r\n  generateTimeshift(options, target) {\r\n    var alias = target.alias || \"\";\r\n    alias = this.templateSrv.replace(alias, options.scopedVars, 'csv');\r\n    return alias;\r\n  }\r\n  generateAlias(options, target) {\r\n    var alias = target.alias || \"\";\r\n    alias = this.templateSrv.replace(alias, options.scopedVars, 'csv');\r\n    return alias;\r\n  }\r\n\r\n  metricFindQuery(query, options) {\r\n    // console.log('options',options);\r\n    return this.request('/rest/sqlutc', this.generateSql(query,options)).then(res => {\r\n      if (!res||!res.data||!res.data.data) {\r\n        return [];\r\n      }else{\r\n        console.log('res',res);\r\n        let values = [];\r\n        for (let i = 0; i < res.data.data.length; i++) {\r\n          values.push({text:''+res.data.data[i]});\r\n        }\r\n        return values;\r\n      }\r\n    });\r\n  }\r\n}\r\n"]}